// <auto-generated />
using System;
using FlightBookingSystem.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightBookingSystem.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20230618081552_Userdbupdate")]
    partial class Userdbupdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FlightBookingSystem.DAL.Model.Airport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("A_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("FlightBookingSystem.DAL.Model.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("B_status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Booking_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Reward_Id")
                        .HasColumnType("int");

                    b.Property<int>("Schedule_Id")
                        .HasColumnType("int");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Reward_Id");

                    b.HasIndex("Schedule_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("FlightBookingSystem.DAL.Model.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Flight_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Flying_Hours")
                        .HasColumnType("int");

                    b.Property<int>("Seat_Capacity")
                        .HasColumnType("int");

                    b.Property<int>("Vacant_Seat")
                        .HasColumnType("int");

                    b.Property<int>("Weight_Limit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("FlightBookingSystem.DAL.Model.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("Booking_Id")
                        .HasColumnType("int");

                    b.Property<string>("P_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Payment_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Reward_Id")
                        .HasColumnType("int");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Booking_Id");

                    b.HasIndex("Reward_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("FlightBookingSystem.DAL.Model.Reward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("Loyalty_Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rewards");
                });

            modelBuilder.Entity("FlightBookingSystem.DAL.Model.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Arr_Time")
                        .HasColumnType("datetime2");

                    b.Property<int>("Arr_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Dep_Time")
                        .HasColumnType("datetime2");

                    b.Property<int>("Dep_id")
                        .HasColumnType("int");

                    b.Property<int>("Flight_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Arr_id");

                    b.HasIndex("Dep_id");

                    b.HasIndex("Flight_Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("FlightBookingSystem.DAL.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aadhar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Phone")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FlightBookingSystem.DAL.Model.Booking", b =>
                {
                    b.HasOne("FlightBookingSystem.DAL.Model.Reward", "rewards")
                        .WithMany("bookings")
                        .HasForeignKey("Reward_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FlightBookingSystem.DAL.Model.Schedule", "schedules")
                        .WithMany("bookings")
                        .HasForeignKey("Schedule_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FlightBookingSystem.DAL.Model.User", "users")
                        .WithMany("bookings")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("rewards");

                    b.Navigation("schedules");

                    b.Navigation("users");
                });

            modelBuilder.Entity("FlightBookingSystem.DAL.Model.Payment", b =>
                {
                    b.HasOne("FlightBookingSystem.DAL.Model.Booking", "bookings")
                        .WithMany("payments")
                        .HasForeignKey("Booking_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FlightBookingSystem.DAL.Model.Reward", "rewards")
                        .WithMany("payments")
                        .HasForeignKey("Reward_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FlightBookingSystem.DAL.Model.User", "users")
                        .WithMany("payments")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("bookings");

                    b.Navigation("rewards");

                    b.Navigation("users");
                });

            modelBuilder.Entity("FlightBookingSystem.DAL.Model.Schedule", b =>
                {
                    b.HasOne("FlightBookingSystem.DAL.Model.Airport", "arrivalAirport")
                        .WithMany("arrivalSchedule")
                        .HasForeignKey("Arr_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FlightBookingSystem.DAL.Model.Airport", "departureAirport")
                        .WithMany("departureSchedule")
                        .HasForeignKey("Dep_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FlightBookingSystem.DAL.Model.Flight", "flights")
                        .WithMany("schedules")
                        .HasForeignKey("Flight_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("arrivalAirport");

                    b.Navigation("departureAirport");

                    b.Navigation("flights");
                });

            modelBuilder.Entity("FlightBookingSystem.DAL.Model.Airport", b =>
                {
                    b.Navigation("arrivalSchedule");

                    b.Navigation("departureSchedule");
                });

            modelBuilder.Entity("FlightBookingSystem.DAL.Model.Booking", b =>
                {
                    b.Navigation("payments");
                });

            modelBuilder.Entity("FlightBookingSystem.DAL.Model.Flight", b =>
                {
                    b.Navigation("schedules");
                });

            modelBuilder.Entity("FlightBookingSystem.DAL.Model.Reward", b =>
                {
                    b.Navigation("bookings");

                    b.Navigation("payments");
                });

            modelBuilder.Entity("FlightBookingSystem.DAL.Model.Schedule", b =>
                {
                    b.Navigation("bookings");
                });

            modelBuilder.Entity("FlightBookingSystem.DAL.Model.User", b =>
                {
                    b.Navigation("bookings");

                    b.Navigation("payments");
                });
#pragma warning restore 612, 618
        }
    }
}
